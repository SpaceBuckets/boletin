import path from 'path';
import { defineNuxtModule, addServerMiddleware, addPluginTemplate } from '@nuxt/kit';
import express from 'express';
import { createClient } from '@supabase/supabase-js';

const authHandler = (moduleOptions) => {
  const { supabaseKey, supabaseUrl, supabaseOptions } = moduleOptions;
  const app = express();
  const supabase = createClient(supabaseUrl, supabaseKey, supabaseOptions);
  app.use(express.json());
  app.use("/set-auth-cookie", async (req, res) => {
    supabase.auth.api.setAuthCookie(req, res);
    return "auth cookie set";
  });
  return app;
};

const nuxtModule = defineNuxtModule({
  meta: {
    name: "nuxt-supabase",
    configKey: "supabase"
  },
  setup(resolvedOptions, nuxtApp) {
    addServerMiddleware({
      path: "/api/auth",
      handler: authHandler(resolvedOptions)
    });
    addPluginTemplate({
      src: path.resolve(__dirname, "templates/cookie.client.mjs"),
      filename: "supabase-cookie.js",
      options: resolvedOptions
    });
    addPluginTemplate({
      src: path.resolve(__dirname, "templates/plugin.mjs"),
      filename: "supabase.js",
      options: resolvedOptions
    });
  }
});
module.exports.meta = require("../package.json");

export { nuxtModule as default };
