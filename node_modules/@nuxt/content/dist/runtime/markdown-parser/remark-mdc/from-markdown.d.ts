/**
 * Based on: https://github.com/syntax-tree/mdast-util-directive
 * Version: 2.1.0
 * License: MIT (https://github.com/syntax-tree/mdast-util-directive/blob/main/license)
 */
import type { Token } from 'micromark-util-types';
declare function enterContainer(token: Token): void;
declare function exitContainer(token: Token): void;
declare function enterContainerSection(token: Token): void;
declare function enterContainerDataSection(token: Token): void;
declare function exitContainerSection(token: Token): void;
declare function exitContainerDataSection(token: Token): void;
declare function exitContainerSectionTitle(token: Token): void;
declare function enterLeaf(token: Token): void;
declare function enterTextSpan(token: Token): void;
declare function enterText(token: Token): void;
declare function exitName(token: Token): void;
declare function enterContainerLabel(token: Token): void;
declare function exitContainerLabel(token: Token): void;
declare function enterAttributes(): void;
declare function exitAttributeIdValue(token: Token): void;
declare function exitAttributeClassValue(token: Token): void;
declare function exitAttributeValue(token: Token): void;
declare function exitAttributeName(token: Token): void;
declare function exitAttributes(): void;
declare function exitToken(token: Token): void;
declare function conditionalExit(token: Token): void;
declare const _default: {
    canContainEols: string[];
    enter: {
        componentContainer: typeof enterContainer;
        componentContainerSection: typeof enterContainerSection;
        componentContainerDataSection: typeof enterContainerDataSection;
        componentContainerAttributes: typeof enterAttributes;
        componentContainerLabel: typeof enterContainerLabel;
        componentLeaf: typeof enterLeaf;
        componentLeafAttributes: typeof enterAttributes;
        componentText: typeof enterText;
        textSpan: typeof enterTextSpan;
        componentTextAttributes: typeof enterAttributes;
    };
    exit: {
        componentContainerSectionTitle: typeof exitContainerSectionTitle;
        listUnordered: typeof conditionalExit;
        listOrdered: typeof conditionalExit;
        listItem: typeof conditionalExit;
        componentContainerSection: typeof exitContainerSection;
        componentContainerDataSection: typeof exitContainerDataSection;
        componentContainer: typeof exitContainer;
        componentContainerAttributeClassValue: typeof exitAttributeClassValue;
        componentContainerAttributeIdValue: typeof exitAttributeIdValue;
        componentContainerAttributeName: typeof exitAttributeName;
        componentContainerAttributeValue: typeof exitAttributeValue;
        componentContainerAttributes: typeof exitAttributes;
        componentContainerLabel: typeof exitContainerLabel;
        componentContainerName: typeof exitName;
        componentContainerAttributeInitializerMarker(): void;
        componentLeaf: typeof exitToken;
        componentLeafAttributeClassValue: typeof exitAttributeClassValue;
        componentLeafAttributeIdValue: typeof exitAttributeIdValue;
        componentLeafAttributeName: typeof exitAttributeName;
        componentLeafAttributeValue: typeof exitAttributeValue;
        componentLeafAttributes: typeof exitAttributes;
        componentLeafName: typeof exitName;
        componentText: typeof exitToken;
        textSpan: typeof exitToken;
        componentTextAttributeClassValue: typeof exitAttributeClassValue;
        componentTextAttributeIdValue: typeof exitAttributeIdValue;
        componentTextAttributeName: typeof exitAttributeName;
        componentTextAttributeValue: typeof exitAttributeValue;
        componentTextAttributes: typeof exitAttributes;
        componentTextName: typeof exitName;
    };
};
export default _default;
