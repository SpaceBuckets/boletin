import type { CompatibilityEvent } from 'h3';
import type { QueryBuilderParams, ParsedContent, QueryBuilder } from '../types';
export declare const sourceStorage: import("unstorage/dist/types-20f3bd04").S;
export declare const cacheStorage: import("unstorage/dist/types-20f3bd04").S;
export declare const cacheParsedStorage: import("unstorage/dist/types-20f3bd04").S;
/**
 * Content ignore patterns
 */
export declare const contentIgnores: any;
export declare const getContentsIds: (event: CompatibilityEvent, prefix?: string) => Promise<any[]>;
export declare const getContentsList: (event: CompatibilityEvent, prefix?: string) => Promise<ParsedContent[]>;
export declare const getContent: (event: CompatibilityEvent, id: string) => Promise<ParsedContent>;
/**
 * Query contents
 */
export declare function serverQueryContent<T = ParsedContent>(event: CompatibilityEvent): QueryBuilder<T>;
export declare function serverQueryContent<T = ParsedContent>(event: CompatibilityEvent, params?: Partial<QueryBuilderParams>): QueryBuilder<T>;
export declare function serverQueryContent<T = ParsedContent>(event: CompatibilityEvent, path?: string, ...pathParts: string[]): QueryBuilder<T>;
