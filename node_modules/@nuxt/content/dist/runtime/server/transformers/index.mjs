import { extname } from "pathe";
import { getParser, getTransformers } from "#content/virtual/transformers";
import { useNitroApp } from "#imports";
export async function parseContent(id, content) {
  const nitroApp = useNitroApp();
  const file = { _id: id, body: content };
  await nitroApp.hooks.callHook("content:file:beforeParse", file);
  const ext = extname(id);
  const plugin = getParser(ext);
  if (!plugin) {
    console.warn(`${ext} files are not supported, "${id}" falling back to raw content`);
    return file;
  }
  const parsed = await plugin.parse(file._id, file.body);
  const transformers = getTransformers(ext);
  const result = await transformers.reduce(async (prev, cur) => {
    const next = await prev || parsed;
    return cur.transform(next);
  }, Promise.resolve(parsed));
  await nitroApp.hooks.callHook("content:file:afterParse", result);
  return result;
}
