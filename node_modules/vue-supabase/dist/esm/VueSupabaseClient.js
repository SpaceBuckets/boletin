// @ts-ignore
import { isVue3 } from "vue-demi";
import { SupabaseClient } from "@supabase/supabase-js";
import supabaseSymbol from "./symbol";
export class VueSupabaseClient extends SupabaseClient {
    constructor(supabaseUrl, supabaseKey, supabaseOptions) {
        super(supabaseUrl, supabaseKey, supabaseOptions);
    }
    install(app) {
        const self = this;
        if (isVue3) {
            app.provide(supabaseSymbol, self);
            Object.defineProperty(app.config.globalProperties, "$supabase", {
                get: () => self,
                configurable: true,
            });
        }
        else {
            app.mixin({
                provide: () => ({
                    [supabaseSymbol]: self,
                }),
            });
            Object.defineProperty(app.prototype, "$supabase", {
                get: () => self,
                configurable: true,
            });
            app.$supabase = self;
        }
    }
}
export function createVueSupabase({ supabaseUrl, supabaseKey, supabaseOptions, }) {
    return new VueSupabaseClient(supabaseUrl, supabaseKey, supabaseOptions);
}
//# sourceMappingURL=VueSupabaseClient.js.map