// @ts-ignore
import { inject, onMounted, onUnmounted } from "vue-demi";
import supabaseSymbol from "./symbol";
export function useSupabase() {
    const supabase = inject(supabaseSymbol);
    if (!supabase) {
        throw new Error("Supabase provider not found");
    }
    return supabase;
}
export function useSupabaseAuth() {
    const supabase = useSupabase();
    return supabase.auth;
}
export function useSupabaseStorage() {
    const supabase = useSupabase();
    return supabase.storage;
}
export function useSupabaseFrom() {
    const supabase = useSupabase();
    return supabase.from;
}
export function useSupabaseFunctions() {
    const supabase = useSupabase();
    return supabase.functions;
}
export function useOnAuthStateChange(callback) {
    const client = useSupabase();
    onMounted(() => {
        if (client.auth.session()) {
            callback("SIGNED_IN", client.auth.session());
        }
    });
    const { data: authListener } = client.auth.onAuthStateChange((event, session) => {
        callback(event, session);
    });
    onUnmounted(() => {
        authListener === null || authListener === void 0 ? void 0 : authListener.unsubscribe();
    });
}
//# sourceMappingURL=composables.js.map