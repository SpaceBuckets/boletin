"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOnAuthStateChange = exports.useSupabaseFunctions = exports.useSupabaseFrom = exports.useSupabaseStorage = exports.useSupabaseAuth = exports.useSupabase = void 0;
// @ts-ignore
const vue_demi_1 = require("vue-demi");
const symbol_1 = __importDefault(require("./symbol"));
function useSupabase() {
    const supabase = (0, vue_demi_1.inject)(symbol_1.default);
    if (!supabase) {
        throw new Error("Supabase provider not found");
    }
    return supabase;
}
exports.useSupabase = useSupabase;
function useSupabaseAuth() {
    const supabase = useSupabase();
    return supabase.auth;
}
exports.useSupabaseAuth = useSupabaseAuth;
function useSupabaseStorage() {
    const supabase = useSupabase();
    return supabase.storage;
}
exports.useSupabaseStorage = useSupabaseStorage;
function useSupabaseFrom() {
    const supabase = useSupabase();
    return supabase.from;
}
exports.useSupabaseFrom = useSupabaseFrom;
function useSupabaseFunctions() {
    const supabase = useSupabase();
    return supabase.functions;
}
exports.useSupabaseFunctions = useSupabaseFunctions;
function useOnAuthStateChange(callback) {
    const client = useSupabase();
    (0, vue_demi_1.onMounted)(() => {
        if (client.auth.session()) {
            callback("SIGNED_IN", client.auth.session());
        }
    });
    const { data: authListener } = client.auth.onAuthStateChange((event, session) => {
        callback(event, session);
    });
    (0, vue_demi_1.onUnmounted)(() => {
        authListener === null || authListener === void 0 ? void 0 : authListener.unsubscribe();
    });
}
exports.useOnAuthStateChange = useOnAuthStateChange;
//# sourceMappingURL=composables.js.map